package rules;

import com.redhat.demo.dm.ccfraud.domain.CreditCardTransaction;
import com.redhat.demo.dm.ccfraud.domain.InMemCreditCardTansaction;
import java.util.Collection;
import java.util.ArrayList;


declare PotentialFraudFact
	creditCardNumber: long
	transactions: java.util.ArrayList
end



// declaration 
declare window CCWindow 
	CreditCardTransaction () over window:time( 60s )
end
// rules

rule "New Event"
no-loop 
salience 200

	when
		$cct: CreditCardTransaction( )
	then
	System.out.println("Here  "+ $cct.getTransactionNumber() );
	System.out.println("TS  "+ $cct.getTimestamp());
		insert($cct);
				
end

rule "CC-Transactions last 15 minutes"
salience 100
    when 
		accumulate ( $cct: CreditCardTransaction() from window CCWindow ;
       		$nrOfTransactions : count($cct),
				$list: collectList($cct);
				$nrOfTransactions > 3)
	$c1: CreditCardTransaction() from $list
	$c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list
then
	System.out.println("\nFound 4 or more cc transactions in last 15 minutes of current transaction = "+$list.size());
	System.out.println("And within that collection, there are 2 transactions within 10 seconds of each other.\n"+$nrOfTransactions);
	System.out.println("ccc   "+$c1);
	System.out.println("kkk   "+$c2);
	PotentialFraudFact potentialFraud = new PotentialFraudFact();
	potentialFraud.setTransactions(new java.util.ArrayList());
	
	insert(potentialFraud);
end






rule "Found potential fraud"
when
	exists PotentialFraudFact()
then
	System.out.println("\n!!!! Found a potential fraud!!!!\n");
end
